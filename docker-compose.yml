version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat_service_app
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file:
      - .env
    environment:
      APP_MODULE: ${APP_MODULE:-main:app}
      HOST: 0.0.0.0
      PORT: 8000
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://postgres:postgres@postgres:5432/chat_service}
      MONGODB_URL: ${MONGODB_URL:-mongodb://mongo:27017/chat_service}
      JWT_SECRET: ${JWT_SECRET:-dev-secret-change-me}
    ports:
      - "8000:8000"
    command: >
      sh -c "uvicorn ${APP_MODULE} --host ${HOST} --port ${PORT}"
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: chat_service_pg
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-chat_service}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-chat_service}"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  mongo:
    image: mongo:7
    container_name: chat_service_mongo
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' | grep 1"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

volumes:
  pg_data:
  mongo_data:
